#include "gfp.h"

TEXT ·gfpNeg(SB),0,$0-16
	MOVQ a+8(FP), DI

	MOVQ ·p2+0(SB), R8
	MOVQ ·p2+8(SB), R9
	MOVQ ·p2+16(SB), R10
	MOVQ ·p2+24(SB), R11

	SUBQ 0(DI), R8
	SBBQ 8(DI), R9
	SBBQ 16(DI), R10
	SBBQ 24(DI), R11

	MOVQ $0, AX
	gfpReduce(R8,R9,R10,R11,AX, R12,R13,R14,R15,BX)

	MOVQ c+0(FP), DI
	MOVQ R8, 0(DI)
	MOVQ R9, 8(DI)
	MOVQ R10, 16(DI)
	MOVQ R11, 24(DI)
	RET


TEXT ·gfpAdd(SB),0,$0-24
	MOVQ a+8(FP), DI
	MOVQ b+16(FP), SI

	// x1 = a+b
	MOVQ  0(DI), R8
	MOVQ  8(DI), R9
	MOVQ 16(DI), R10
	MOVQ 24(DI), R11
	MOVQ $0, R12

	ADDQ  0(SI), R8
	ADCQ  8(SI), R9
	ADCQ 16(SI), R10
	ADCQ 24(SI), R11
	ADCQ $0, R12

	gfpReduce(R8,R9,R10,R11,R12, R13,R14,R15,AX,BX)

	MOVQ c+0(FP), DI
	MOVQ R8, 0(DI)
	MOVQ R9, 8(DI)
	MOVQ R10, 16(DI)
	MOVQ R11, 24(DI)
	RET

TEXT ·gfpMul(SB),0,$96-24
	MOVQ a+8(FP), DI
	MOVQ b+16(FP), SI

	MOVQ 0(DI), DX
	MULXQ 0(SI), R8, R9
	MULXQ 8(SI), AX, R10
	ADDQ AX, R9
	MULXQ 16(SI), AX, R11
	ADCQ AX, R10
	MULXQ 24(SI), AX, R12
	ADCQ AX, R11
	ADCQ $0, R12
	MOVQ $0, R13
	ADCQ $0, R13

	MOVQ 8(DI), DX
	MULXQ 0(SI), AX, BX
	ADDQ AX, R9
	ADCQ BX, R10
	ADCQ $0, R11
	ADCQ $0, R12
	ADCQ $0, R13
	MULXQ 8(SI), AX, BX
	ADDQ AX, R10
	ADCQ BX, R11
	ADCQ $0, R12
	ADCQ $0, R13
	MULXQ 16(SI), AX, BX
	ADDQ AX, R11
	ADCQ BX, R12
	ADCQ $0, R13
	MULXQ 24(SI), AX, BX
	ADDQ AX, R12
	ADCQ BX, R13
	MOVQ $0, R14
	ADCQ $0, R14

	MOVQ 16(DI), DX
	MULXQ 0(SI), AX, BX
	ADDQ AX, R10
	ADCQ BX, R11
	ADCQ $0, R12
	ADCQ $0, R13
	ADCQ $0, R14
	MULXQ 8(SI), AX, BX
	ADDQ AX, R11
	ADCQ BX, R12
	ADCQ $0, R13
	ADCQ $0, R14
	MULXQ 16(SI), AX, BX
	ADDQ AX, R12
	ADCQ BX, R13
	ADCQ $0, R14
	MULXQ 24(SI), AX, BX
	ADDQ AX, R13
	ADCQ BX, R14
	MOVQ $0, R15
	ADCQ $0, R15

	MOVQ 24(DI), DX
	MULXQ 0(SI), AX, BX
	ADDQ AX, R11
	ADCQ BX, R12
	ADCQ $0, R13
	ADCQ $0, R14
	ADCQ $0, R15
	MULXQ 8(SI), AX, BX
	ADDQ AX, R12
	ADCQ BX, R13
	ADCQ $0, R14
	ADCQ $0, R15
	MULXQ 16(SI), AX, BX
	ADDQ AX, R13
	ADCQ BX, R14
	ADCQ $0, R15
	MULXQ 24(SI), AX, BX
	ADDQ AX, R14
	ADCQ BX, R15

	MOVQ R8, 0(SP)
	MOVQ R9, 8(SP)
	MOVQ R10, 16(SP)
	MOVQ R11, 24(SP)
	MOVQ R12, 32(SP)
	MOVQ R13, 40(SP)
	MOVQ R14, 48(SP)
	MOVQ R15, 56(SP)

	// m = the bottom of (the bottom of T * N')
	// Store m in R8:R9:R10:R11
	MOVQ ·np+0(SB), DX
	MULXQ 0(SP), R8, R9
	MULXQ 8(SP), AX, R10
	ADDQ AX, R9
	MULXQ 16(SP), AX, R11
	ADCQ AX, R10
	MULXQ 24(SP), AX, BX
	ADCQ AX, R11

	MOVQ ·np+8(SB), DX
	MULXQ 0(SP), AX, BX
	ADDQ AX, R9
	ADCQ BX, R10
	MULXQ 16(SP), AX, BX
	ADCQ AX, R11
	MULXQ 8(SP), AX, BX
	ADDQ AX, R10
	ADCQ BX, R11

	MOVQ ·np+16(SB), DX
	MULXQ 0(SP), AX, BX
	ADDQ AX, R10
	ADCQ BX, R11
	MULXQ 8(SP), AX, BX
	ADDQ AX, R11

	MOVQ ·np+24(SB), DX
	MULXQ 0(SP), AX, BX
	ADDQ AX, R11

	MOVQ R8, 64(SP)
	MOVQ R9, 72(SP)
	MOVQ R10, 80(SP)
	MOVQ R11, 88(SP)

	// Compute m * N
	// Store in R8:...:R15
	MOVQ ·p2+0(SB), DX
	MULXQ 64(SP), R8, R9
	MULXQ 72(SP), AX, R10
	ADDQ AX, R9
	MULXQ 80(SP), AX, R11
	ADCQ AX, R10
	MULXQ 88(SP), AX, R12
	ADCQ AX, R11
	ADCQ $0, R12
	MOVQ $0, R13
	ADCQ $0, R13

	MOVQ ·p2+8(SB), DX
	MULXQ 64(SP), AX, BX
	ADDQ AX, R9
	ADCQ BX, R10
	ADCQ $0, R11
	ADCQ $0, R12
	ADCQ $0, R13
	MULXQ 72(SP), AX, BX
	ADDQ AX, R10
	ADCQ BX, R11
	ADCQ $0, R12
	ADCQ $0, R13
	MULXQ 80(SP), AX, BX
	ADDQ AX, R11
	ADCQ BX, R12
	ADCQ $0, R13
	MULXQ 88(SP), AX, BX
	ADDQ AX, R12
	ADCQ BX, R13
	MOVQ $0, R14
	ADCQ $0, R14

	MOVQ ·p2+16(SB), DX
	MULXQ 64(SP), AX, BX
	ADDQ AX, R10
	ADCQ BX, R11
	ADCQ $0, R12
	ADCQ $0, R13
	ADCQ $0, R14
	MULXQ 72(SP), AX, BX
	ADDQ AX, R11
	ADCQ BX, R12
	ADCQ $0, R13
	ADCQ $0, R14
	MULXQ 80(SP), AX, BX
	ADDQ AX, R12
	ADCQ BX, R13
	ADCQ $0, R14
	MULXQ 88(SP), AX, BX
	ADDQ AX, R13
	ADCQ BX, R14
	MOVQ $0, R15
	ADCQ $0, R15

	MOVQ ·p2+24(SB), DX
	MULXQ 64(SP), AX, BX
	ADDQ AX, R11
	ADCQ BX, R12
	ADCQ $0, R13
	ADCQ $0, R14
	ADCQ $0, R15
	MULXQ 72(SP), AX, BX
	ADDQ AX, R12
	ADCQ BX, R13
	ADCQ $0, R14
	ADCQ $0, R15
	MULXQ 80(SP), AX, BX
	ADDQ AX, R13
	ADCQ BX, R14
	ADCQ $0, R15
	MULXQ 88(SP), AX, BX
	ADDQ AX, R14
	ADCQ BX, R15

	// Add the 512-bit intermediate to m*N
	ADDQ 0(SP), R8
	ADCQ 8(SP), R9
	ADCQ 16(SP), R10
	ADCQ 24(SP), R11
	ADCQ 32(SP), R12
	ADCQ 40(SP), R13
	ADCQ 48(SP), R14
	ADCQ 56(SP), R15
	MOVQ $0, AX
	ADCQ $0, AX

	gfpReduce(R12,R13,R14,R15,AX, R8,R9,R10,R11,BX)

	MOVQ c+0(FP), DI
	MOVQ R12, 0(DI)
	MOVQ R13, 8(DI)
	MOVQ R14, 16(DI)
	MOVQ R15, 24(DI)
	RET
